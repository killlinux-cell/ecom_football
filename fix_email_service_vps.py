#!/usr/bin/env python
"""
Script pour corriger le service email sur le VPS
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecom_maillot.settings')
django.setup()

def fix_email_service():
    """Corrige le service email"""
    print("üîß CORRECTION DU SERVICE EMAIL")
    print("=" * 60)
    
    try:
        from notifications.models import EmailSettings, EmailTemplate
        from notifications.email_service import get_email_service
        
        # V√©rifier les param√®tres email
        settings = EmailSettings.objects.first()
        if not settings:
            print("‚ùå Aucun param√®tre email trouv√©")
            return False
        
        print(f"üìß Param√®tres email trouv√©s:")
        print(f"   - Actif: {settings.is_active}")
        print(f"   - Envoi confirmations: {settings.send_order_confirmations}")
        print(f"   - Email: {settings.from_email}")
        
        # V√©rifier les templates
        templates = EmailTemplate.objects.all()
        print(f"üìù {templates.count()} template(s) trouv√©(s)")
        
        for template in templates:
            print(f"   - {template.name}: {template.is_active}")
        
        # Tester le service email
        print(f"\nüß™ Test du service email...")
        email_service = get_email_service()
        
        if email_service.settings:
            print(f"‚úÖ Service email initialis√© correctement")
            return True
        else:
            print(f"‚ùå Service email non initialis√©")
            return False
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la correction: {str(e)}")
        return False

def disable_email_temporarily():
    """D√©sactive temporairement le syst√®me email"""
    print("\nüîß D√âSACTIVATION TEMPORAIRE DU SYST√àME EMAIL")
    print("=" * 60)
    
    try:
        from notifications.models import EmailSettings
        
        settings = EmailSettings.objects.first()
        if settings:
            settings.is_active = False
            settings.save()
            print("‚úÖ Syst√®me email d√©sactiv√© temporairement")
            return True
        else:
            print("‚ùå Aucun param√®tre email trouv√©")
            return False
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la d√©sactivation: {str(e)}")
        return False

def main():
    """Fonction principale"""
    print("üîß CORRECTION DU SERVICE EMAIL SUR VPS")
    print("=" * 60)
    
    # Essayer de corriger le service
    success1 = fix_email_service()
    
    if not success1:
        # D√©sactiver temporairement si la correction √©choue
        print("\n‚ö†Ô∏è Correction √©chou√©e, d√©sactivation temporaire...")
        success2 = disable_email_temporarily()
        
        if success2:
            print("\nüéâ SOLUTION TEMPORAIRE APPLIQU√âE!")
            print("‚úÖ Le syst√®me email est d√©sactiv√© temporairement")
            print("‚úÖ Les commandes peuvent maintenant √™tre cr√©√©es")
            print("‚ö†Ô∏è Les emails ne seront pas envoy√©s jusqu'√† la correction")
        else:
            print("\nüí• √âCHEC COMPLET!")
            print("‚ùå Impossible de corriger ou d√©sactiver le syst√®me email")
    else:
        print("\nüéâ CORRECTION R√âUSSIE!")
        print("‚úÖ Le service email fonctionne correctement")
    
    return success1

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
